DECLARE

proc EscribeBool (int, bool, char);

//vamos a hacerlo asi: {tipo1, tipo2, tipo3...}
//En el documento no estaba, pero para pasar variables con un tipo sin nombre como parametro

bool Impar (int);
int Suma (int [2] [2] [2]);
int FactPar(int[2]);
int FactImpar(int[2]);

DEFINE

EscribeBool (contador, sino, aux){
	sino = true;
}

Impar (a){
	bool sol;
	sol = ((a % 2) != 0);
	return sol;
}

Suma (a){
	int as;
	as = a[0][0][0] + a[0][0][1] + a[0][1][0] + a[0][1][1] + a[1][0][0] + a[1][0][1] + a[1][1][0] + a[1][1][1];
	return as;
}

FactPar(a) {
	int resultado;
	if (a[1] > 1) {
		a[1] = a[1] - 1;
		int aux;
		aux = a[0];
		a[0] = a[0] - 1;
		a[0] = aux * FactImpar(a);
		resultado = a[0];
	} else {
		resultado = a[0];
	}
	return resultado;
}

FactImpar(a) {
	int resultado;
	if (a[1] > 1) {
		a[1] = a[1] - 1;
		int aux;
		aux = a[0];
		a[0] = a[0] - 1;
		a[0] = aux * FactPar(a);
		resultado = a[0];
	} else {
		resultado = a[0];
	}
	return resultado;
}

START

int indice;
indice = 7;
int i1;
int i2;
int i3;
int i4;
float i5;
char i6;
int i0;
bool boolean;
int valor;

while (indice > -1){

	switch (indice)
	case 1 : {
			int contador;
			bool sino;
			char aux;
		contador = -(10);
		aux = 'z';
		EscribeBool(contador, sino, aux);
		i1 = 1;
	} 

	case 2 : {
		if(~Impar(indice)) {
			indice = 2;
		}
		i2 = 2;
	} 

	case 3 : {
		boolean = Impar(indice);
		if(boolean){
			indice = 3;
		} else {
			indice = 99;
		}
		i3 = 3;
	} 

	case 4 : {
		int [2] [2] [2] array;
		array[0][0][0] = 0;
		array[0][0][1] = 1;
		array[0][1][0] = 2;
		array[0][1+0][1] = 3;
		array[1][0][0] = 4;
		array[1][0][1] = 5;
		array[1][1][0] = 6;
		array[1][1+0][1] = 7^3;
		int suma;
		suma = Suma(array);
		i4 = suma - 360;
		valor = array[1][1+0][1];
	} 

	case 5 : {
		i5 = (5.56 + 0.86) * 2.25 / 2.58;
	}

    case 6 : {
        int [2][2] b;
        b[1][0]= 4;
        b[1][1]= 4;
        int sol;
        sol = FactPar(b[1]);
        i6 = 'f';
    }

    case 7 : {
		//No hace nada
    }

	default : {
		indice = 0;
		i0 = 0;
	}						

	indice = indice - 1;
}

END
